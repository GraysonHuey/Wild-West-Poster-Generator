{
  // TypeScript Configuration for Application Code (src/ directory)
  // This config is specifically for the React application code

  "compilerOptions": {
    // Compilation target - compile to ES2020 JavaScript syntax
    "target": "ES2020",

    // Use the standard ES2022 behavior for class fields (public class fields)
    "useDefineForClassFields": true,

    // Library type definitions to include
    // ES2020 provides modern JavaScript features
    // DOM and DOM.Iterable provide browser APIs and iterators
    "lib": ["ES2020", "DOM", "DOM.Iterable"],

    // Module system to use - ESNext uses the latest ES module syntax
    "module": "ESNext",

    // Skip type checking of declaration files (.d.ts) for faster compilation
    "skipLibCheck": true,

    /* Bundler mode options - optimized for Vite bundler */

    // Use bundler-specific module resolution (works with Vite)
    "moduleResolution": "bundler",

    // Allow importing TypeScript files with extensions (.ts, .tsx)
    "allowImportingTsExtensions": true,

    // Each file is treated as a separate module (required for some bundlers)
    "isolatedModules": true,

    // Force all files to be treated as modules (even without imports/exports)
    "moduleDetection": "force",

    // Don't emit JavaScript files (Vite handles the transpilation)
    "noEmit": true,

    // JSX transformation mode - use React 17+ automatic JSX runtime
    // This means you don't need to import React in every file that uses JSX
    "jsx": "react-jsx",

    /* Linting/Strict Type Checking Options */

    // Enable all strict type checking options
    "strict": true,

    // Report errors on unused local variables
    "noUnusedLocals": true,

    // Report errors on unused function parameters
    "noUnusedParameters": true,

    // Report errors for fallthrough cases in switch statements
    "noFallthroughCasesInSwitch": true
  },

  // Only include files in the src directory for this configuration
  "include": ["src"]
}
